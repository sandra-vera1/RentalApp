@model RentalApp.ViewModels.AddressViewModel

@{
    ViewData["Title"] = "Edit"; // [Update Address] - step 4 create this View (file inside of Views/Address folder and always use the name Edit because of the default route) *@
}

<h1>Edit</h1>

<h4>Address</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="address.Neighborhood" class="control-label"></label>
                <input asp-for="address.Neighborhood" class="form-control" />
                <span asp-validation-for="address.Neighborhood" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.StreetNumber" class="control-label"></label>
                <input asp-for="address.StreetNumber" class="form-control" />
                <span asp-validation-for="address.StreetNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.StreetName" class="control-label"></label>
                <input asp-for="address.StreetName" class="form-control" />
                <span asp-validation-for="address.StreetName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.City" class="control-label"></label>
                <input asp-for="address.City" class="form-control" />
                <span asp-validation-for="address.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.Province" class="control-label"></label>
                <select asp-for="address.Province" class="form-control" id="selectProvince">
                    @foreach (var item in Model.address.Provinces)
                    {
                        <option value="@item.ProvinceId">
                            @Html.DisplayFor(modelItem => item.ProvinceName)
                        </option>

                    }
                </select>
                <span asp-validation-for="address.Province" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.Country" class="control-label"></label>
                <input asp-for="address.Country" class="form-control" />
                <span asp-validation-for="address.Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.PostalCode" class="control-label"></label>
                <input maxlength="6" asp-for="address.PostalCode" class="form-control" />
                <span asp-validation-for="address.PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="address.SuiteNumber" class="control-label"></label>
                <input asp-for="address.SuiteNumber" class="form-control" />
                <span asp-validation-for="address.SuiteNumber" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-secondary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
