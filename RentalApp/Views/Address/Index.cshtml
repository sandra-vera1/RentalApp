@model IEnumerable<RentalApp.ViewModels.AddressViewModel>

@{
	ViewData["Title"] = "Index";
}

<h1>Address List</h1>

<p>
	<a asp-action="Create">Create New</a> @* // [Address List step 3] - create this View (file inside of Views/Address folder) *@
</p>
<table class="table">
	<thead>
		<tr class="table-dark">
			<th>
				@Html.DisplayNameFor(model => model.address.Neighborhood)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.StreetNumber)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.StreetName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.City)
			</th>
			<th>
				Province
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.Country)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.PostalCode)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.address.SuiteNumber)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.address.Neighborhood)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.StreetNumber)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.StreetName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.City)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.ProvinceName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.Country)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.PostalCode)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.address.SuiteNumber)
				</td>
				<td>
					@* // [Update Address step 3] Put object Id in this case is item.AddressId*@
					@Html.ActionLink("Edit", "Edit", new { id = item.address.AddressId }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.address.AddressId }, new { onclick = "return confirm('Are you sure you want to delete this address?');" })
				</td>
			</tr>
		}
	</tbody>
</table>
