@model RentalApp.ViewModels.PropertySearchViewModel;


@{
	ViewData["Title"] = "Index";
}


<h1>Property List</h1>
<br />

<div>
	<form asp-action="Search"
		  data-ajax-method="Post">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<div class="form-group">
			<label asp-for="SearchAll">Search All</label>
			<div id="searchDiv">
				<input id="SearchAll" name="SearchAll" />
				<input type="submit" value="Search" class="btn btn-secondary" />
			</div>
			
		</div>
		<br />
		<button type="button" id="AdvancedSearchFilterButton" class="btn btn-secondary">Advanced Search Filters</button>
		<br />
		<br />
		<div id="SearchFilterDiv" class="col-md-4">
			<div class="form-group">

				<label asp-for="Availability">Available Now</label>
				<input id="Availability" name="Availability" type="checkbox" value="true" />

			</div>
			<br />
			<div class="form-group">
				<label>Price:</label>
				<br />
				<label asp-for="PriceMin" type="number" class="control-label">Min</label>
				<input id="PriceMin" name="PriceMin" class="form-control" />
				<label asp-for="PriceMax" class="control-label">Max</label>
				<input id="PriceMax" name="PriceMax" class="form-control" />
			</div>
			<br />
			<div class="form-group">
				<label asp-for="Neighborhood" class="control-label">Neighborhood</label>
				<input id="Neighborhood" name="Neighborhood" class="form-control" />

				<label asp-for="Type" class="control-label">Type</label>
				<select id="Type" name="Type" class="form-control">
					<option value="All">All</option>
					<option value="Storage">Storage</option>
					<option value="Parking Lot">Parking Lot</option>
				</select>
			</div>
			<br />
			<div class="form-group">
				<label class="control-label">Square Footage:</label>
				<br />
				<label asp-for="SqFtMin" class="control-label" class="control-label">Min</label>
				<input id="SqFtMin" name="SqFtMin" class="form-control" />
				<label asp-for="SqFtMax" class="control-label" class="control-label">Max</label>
				<input id="SqFtMax" name="SqFtMax" class="form-control" />
			</div>
		</div>
	


	</form>


</div>


<table class="table">
	<br />
	<thead>		
		<tr class="table-dark">
	@* 	<a href="d:\school\sodv2202 oop\sodv2202_groupproject_rentalapp\rentalapp\rentalapp\views\property\create.cshtml">d:\school\sodv2202 oop\sodv2202_groupproject_rentalapp\rentalapp\rentalapp\views\property\create.cshtml</a>
		<br />
		@Html.ActionLink("Create Property", "Create")
		<--- Is this what your were looking for? Html.ActionLink("Link text", "Action" )
		<br />
		<a href="/Property/Create">Create Property</a> <--- Created manually, the href should have the "/ControllerName/Action" if you need to pass a parameter like the id, you add at the end like "/ControllerName/Action/15" *@
		<tr>


			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Address.StreetNumber)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Address.StreetName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Address.City)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Address.ProvinceName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.SquareFootage)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Facilities)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Term)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Type)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Availability)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Price)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PropDisplay.Property.Address.Neighborhood)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.PropertyList)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Address.StreetNumber)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Address.StreetName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Address.City)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Address.ProvinceName)
				</td>



				<td>
					@Html.DisplayFor(modelItem => item.Property.SquareFootage)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Facilities)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Term)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Type)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Availability)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Price)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Property.Address.Neighborhood)
				</td>
				<td>
					@if (User.IsInRole("Owner"))
					{
						// I feel like edit and delete should not be on the full property list page as this page lists ALL properties
						// we can't have owners editing each others properties. 
						// Unless we are able to add this ONLY to properties of that owner however that seems tedious
@* 						@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) 
						@:| *@
						@Html.ActionLink("Details", "Details", new { propertyId = item.Property.PropertyId })
@* 						@:|
						@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }) *@
					}
					@if (User.IsInRole("Renter"))
					{
						@Html.ActionLink("Add Favorite", "AddFavorite", new { id = item.Property.PropertyId })
						@:|
						@Html.ActionLink("Quote", "Quote", new { id = item.Property.PropertyId }, new { target = "_blank" })
						@:|
						@Html.ActionLink("Details", "Details", new { propertyId = item.Property.PropertyId })
					}
				</td>
			</tr>
		}
	</tbody>
</table>

@* @section Scripts {
	<script src="/js/site.js"></script>
} *@